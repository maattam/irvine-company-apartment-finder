{"version":3,"sources":["domain/findUnits.js","components/Unit.js","components/Apartment.js","App.js","serviceWorker.js","index.js"],"names":["findUnits","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","res","wrap","_context","prev","next","fetch","createSearchUrl","headers","accept","sent","json","t0","mapUnitResult","abrupt","resultsets","results","map","stop","_x","apply","this","arguments","_ref2","communityId","url","URL","search","URLSearchParams","sp_q_1","sp_x_1","sp_x_3","sp_q_3","sp_q_4","sp_x_4","app","count","sp_s","upm_field_table","sp_q_exact_8","sp_x_8","result","upm","keys","id","upm_buildingUnit","name","floorplanMarketingName","rent","parseFloat","upm_baseRent","marketRent","pricingDate","unitPricingDate","sqFt","unitSqFt","bathrooms","parseInt","bedrooms","amenities","split","filter","amenity","length","occupancyStatusCode","availableAt","upm_startDate","floor","floorLevel","Unit","react_default","createElement","index_es","align","join","Apartment","classes","_useState","useState","_useState2","slicedToArray","units","setUnits","useEffect","then","filterUnit","style","styles","root","title","variant","tableWrapper","Apartment_Head","unit","Unit_Unit","assign","key","loaderWrapper","Head","width","marginTop","overflowX","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","communities","App","wrapper","list","community","Apartment_Apartment","Component","marginBottom","minWidth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9877ee39.chunk.js","sourcesContent":["export const findUnits = async query => {\n  const res = await fetch(createSearchUrl(query), {\n    headers: {\n      accept: \"application/json\"\n    }\n  });\n\n  return (await res.json()).resultsets[0].results.map(mapUnitResult);\n};\n\nconst createSearchUrl = ({ communityId }) => {\n  const url = new URL(\"https://www.irvinecompanyapartments.com/snp\");\n  url.search = new URLSearchParams({\n    sp_q_1: \"unit\",\n    sp_x_1: \"entityType\",\n    sp_x_3: \"communityIdAEM\",\n    sp_q_3: communityId,\n    sp_q_4: \"ica\",\n    sp_x_4: \"appId\",\n    app: \"icaFloorplanPage\",\n    count: 999,\n    sp_s: \"planName\",\n    upm_field_table: 1,\n    sp_q_exact_8: 12,\n    sp_x_8: \"upm.upm_leaseTerm\",\n  });\n  return url;\n};\n\nconst mapUnitResult = result => {\n  const upm = result.upm[0][Object.keys(result.upm[0])[0]][0];\n  return {\n    id: upm.upm_buildingUnit,\n    name: result.floorplanMarketingName,\n    rent: parseFloat(upm.upm_baseRent),\n    marketRent: parseFloat(result.marketRent),\n    pricingDate: result.unitPricingDate,\n    sqFt: result.unitSqFt,\n    bathrooms: parseInt(result.bathrooms),\n    bedrooms: parseInt(result.bedrooms),\n    amenities: result.amenities.split(\"|\").filter(amenity => !!amenity.length),\n    occupancyStatusCode: result.occupancyStatusCode,\n    availableAt: upm.upm_startDate,\n    floor: result.floorLevel || 1\n  };\n};\n","import React from \"react\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nexport const Unit = ({ id, name, rent, marketRent, sqFt, amenities, availableAt, floor }) => (\n  <TableRow>\n    <TableCell>{name}</TableCell>\n    <TableCell>{id}</TableCell>\n    <TableCell align=\"right\">{floor}</TableCell>\n    <TableCell align=\"right\">{rent} ({marketRent})</TableCell>\n    <TableCell align=\"right\">{sqFt}</TableCell>\n    <TableCell>{availableAt}</TableCell>\n    <TableCell>{amenities.join(\", \")}</TableCell>\n  </TableRow>\n);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { findUnits } from \"../domain/findUnits\";\n\nimport { Unit } from \"./Unit\";\n\nexport const Apartment = ({ classes, name, communityId }) => {\n  const [units, setUnits] = useState(null);\n\n  useEffect(() => {\n    findUnits({ communityId }).then(units => {\n      setUnits(units.filter(filterUnit));\n    });\n  }, []);\n\n  if (!units) {\n    return (\n      <Paper style={styles.root}>\n        <div style={styles.loaderWrapper}>\n          <CircularProgress />\n        </div>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper style={styles.root}>\n      <Typography style={styles.title} variant=\"h6\" id=\"tableTitle\">\n        {name}\n      </Typography>\n\n      <div style={styles.tableWrapper}>\n        <Table>\n          <Head />\n          <TableBody>\n            {units.map(unit => (\n              <Unit key={unit.id} {...unit} />\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\n\nconst Head = () => (\n  <TableHead>\n    <TableRow>\n      <TableCell>PLAN</TableCell>\n      <TableCell>BLDG NO./APT NO.</TableCell>\n      <TableCell>FLOOR</TableCell>\n      <TableCell>PRICE</TableCell>\n      <TableCell>SQFT</TableCell>\n      <TableCell>AVAILABLE</TableCell>\n      <TableCell>AMENITIES</TableCell>\n    </TableRow>\n  </TableHead>\n);\n\nconst filterUnit = unit =>\n  unit.bedrooms === 1 && unit.occupancyStatusCode === \"VA\";\n\nconst styles = {\n  root: {\n    width: \"100%\",\n    marginTop: 30\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  loaderWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  title: {\n    paddingLeft: 24,\n    paddingTop: 24\n  }\n};\n","import React, { Component } from \"react\";\n\nimport { Apartment } from \"./components/Apartment\";\n\nconst communities = [\n  {\n    name: \"The Village at Irvine Spectrum\",\n    communityId: \"81a376da-70ac-4ba8-8b2d-1ffe3c3d1afb\"\n  },\n  {\n    name: \"Westview at Irvine Spectrum\",\n    communityId: \"055e718e-d752-4d4c-997f-639492142356\"\n  }, {\n    name: \"Centerpointe at Irvine Spectrum\",\n    communityId: \"3bf9f58a-d19e-424c-a86d-a1780edc4b68\"\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={styles.root}>\n        <div style={styles.wrapper}>\n          <div style={styles.list}>\n            {communities.map(community => (\n              <Apartment key={community.communityId} {...community} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  wrapper: {\n    width: \"80%\",\n    minWidth: 1000\n  },\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}